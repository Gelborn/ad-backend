name: Deploy Supabase

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD:  ${{ secrets.SUPABASE_DB_PASSWORD }}
      SUPABASE_REF:          ${{ secrets.SUPABASE_REF }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Supabase CLI (latest)
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Print Supabase env
        run: |
          echo "Project ref: $SUPABASE_REF"

      # Link (so all subsequent CLI calls know the project & use Supabase API routing)
      - name: Link project
        run: |
          supabase link \
            --project-ref "$SUPABASE_REF" \
            --password    "$SUPABASE_DB_PASSWORD"

      # ‚úÖ Migrations (no prompts; do not force IPv6 by avoiding --db-url)
      - name: Push migrations
        run: |
          supabase --dns-resolver=https db push \
            --yes \
            --include-all \
            --debug

      # Private Edge Functions
      - name: Deploy private Edge Functions
        run: |
          private_fns=(
            cf_create_osc
            cf_create_partnership
            cf_create_restaurant
            cf_match_oscs
            cf_update_favorite
            restaurant_create_donation
            restaurant_release_donation
          )
          for fn in "${private_fns[@]}"; do
            echo "üîê Deploying $fn"
            supabase functions deploy "$fn" \
              --project-ref "$SUPABASE_REF" \
              --import-map supabase/functions/import_map.json
          done

      # Public Edge Functions (no-verify-jwt)
      - name: Deploy public Edge Functions
        run: |
          public_fns=(
            util_cep_info
            osc_accept_donation
            osc_deny_donation
            osc_get_donation_details
            util_send_notifications
          )
          for fn in "${public_fns[@]}"; do
            echo "üåê Deploying $fn (no-verify-jwt)"
            supabase functions deploy "$fn" \
              --project-ref "$SUPABASE_REF" \
              --no-verify-jwt \
              --import-map supabase/functions/import_map.json
          done
